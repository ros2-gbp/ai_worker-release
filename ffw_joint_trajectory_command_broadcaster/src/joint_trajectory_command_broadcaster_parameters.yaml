joint_trajectory_command_broadcaster:
  use_local_topics: {
    type: bool,
    default_value: false,
    description: "Defining if joint trajectory messages should be published into local namespace, e.g., ``/my_broadcaster/joint_trajectory``."
  }
  joints: {
    type: string_array,
    default_value: [],
    description: "Parameter to support broadcasting of only specific joints and interfaces.
    It has to be used in combination with the ``interfaces`` parameter.
    If either ``joints`` or ``interfaces`` is left empty, all available state interfaces will be
    published.
    Joint trajectory broadcaster asks for access to all defined interfaces on all defined joints."
  }
  extra_joints: {
    type: string_array,
    default_value: [],
    description: "Names of extra joints to be added to joint trajectory with position set to 0."
  }
  interfaces: {
    type: string_array,
    default_value: [],
    description: "Parameter to support broadcasting of only specific joints and interfaces.
    It has to be used in combination with the ``joints`` parameter.
    If either ``joints`` or ``interfaces`` is left empty, all available state interfaces will be
    published."
  }
  reverse_joints: {
    type: string_array,
    default_value: [],
    description: "Names of joints to be reversed."
  }
  offsets: {
    type: double_array,
    default_value: [],
    description: "Offsets of joints to be added to the joint positions."
  }
  map_interface_to_joint_state:
    position: {
      type: string,
      default_value: "position",
    }
  use_urdf_to_filter: {
    type: bool,
    default_value: true,
    description: "Uses the robot_description to filter the joint trajectory.
    If true, the broadcaster will publish the data of the joints present in the URDF alone.
    If false, the broadcaster will publish the data of any interface that has type ``position``."
  }
  follower_joint_states_topic: {
    type: string,
    default_value: "/joint_states",
    description: "Topic name for subscribing to follower's joint states to check synchronization."
  }
  sync_threshold: {
    type: double,
    default_value: 0.01,
    description: "Threshold value (in radians) to determine if follower joints are synced with leader joints."
  }
  max_error: {
    type: double,
    default_value: 0.6,
    description: "Maximum error value (in radians) used for adaptive timing calculation. Errors above this value will use maximum delay."
  }
  min_error: {
    type: double,
    default_value: 0.01,
    description: "Minimum error value (in radians) used for adaptive timing calculation. Errors below this value will use minimum delay."
  }
  min_delay: {
    type: double,
    default_value: 0.0,
    description: "Minimum delay (in seconds) for adaptive timing when joints are not synced."
  }
  max_delay: {
    type: double,
    default_value: 0.4,
    description: "Maximum delay (in seconds) for adaptive timing when joints are not synced."
  }
